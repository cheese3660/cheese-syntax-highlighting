{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Cheese",
	"patterns": [
		{
			"include": "#block-comments"
		},
		{
			"include": "#hex-numbers"
		},
		{
			"include": "#binary-numbers"
		},
		{
			"include": "#octal-numbers"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#named-function"
		},
		{
			"include": "#named-generator"
		},
		{
			"include": "#builtin"
		},
		{
			"include": "#control-1"
		},
		{
			"include": "#control-2"
		},
		{
			"include": "#other-1"
		},
		{
			"include": "#operator-2"
		},
		{
			"include": "#operator-1"
		},
		{
			"include": "#other-2"
		},
		{
			"include": "#storage"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#self"
		},
		{
			"include": "#type-1"
		},
		{
			"include": "#function-call"
		},
		{
			"include": "#type-2"
		},
		{
			"include": "#identifiers"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#characters"
		}
	],
	"repository": {
		"named-function": {
			"patterns":[{
			"match": "\\b(fn)\\b\\s*((?!self)(?!~self)(?![a-zA-Z_](\\w)*:)([a-z_](\\w)*))\\s*",
			"captures": {
				"1": {
					"name":"keyword.other.cheese"
				},
				"2": {
					"name":"entity.name.function"
					}
				}}
			]
		},
		"numbers": {
			"patterns":[{
				"match": "[-+]?([0-9])?[0-9_]*\\.?[0-9][0-9_]*([eE][-+]?[0-9_]+)?I?",
				"name": "constant.numeric.decimal.cheese"
			}]
		},
		"hex-numbers": {
			"patterns":[{
				"match": "[-+]?0x[0-9a-fA-F_]+",
				"name": "constant.numeric.hexadecimal.cheese"
			}]
		},
		"octal-numbers": {
			"patterns":[{
				"match": "[-+]?0o[0-7]+",
				"name": "constant.numeric.octal.cheese"
			}]
		},
		"binary-numbers": {
			"patterns":[
				{
					"match": "[-+]?0b[01_]+",
					"name": "constant.numeric.binary.cheese"				
				}
			]
		},
		"named-generator": {
			"patterns":[{
			"match": "\\b(generator)\\b\\s*((?!self)(?!~self)(?![a-zA-Z_](\\w)*:)([a-z_](\\w)*))\\s*",
			"captures": {
				"1": {
					"name":"keyword.other.cheese"
				},
				"2": {
					"name":"entity.name.function"
				}
			}}]
			
		},

		"builtin": {
			"patterns": [{
				"name":"entity.name.function.cheese",
				"match": "\\$(([a-zA-Z_])(\\w)*)\\b"
			}]
		},
		"control-1": {
			"patterns": [
				{
					"name": "keyword.control.cheese",
					"match": "\\b(if|while|for|break|continue|match|else)\\b"
				}
			]
		},
		"control-2": {
			"patterns":[
				{
					"name": "keyword.control.cheese",
					"match": "(==>|<==)"
				}
			]
		},
		"operator-1": {
			"patterns":[
				{
					"name": "keyword.operator.cheese",
					"match": "(\\+|-|\\*|&|\\:=|\\=|\\(|\\.\\(|\\.|\\.\\{|\\{|\\.\\[|\\[|\\)|\\]|\\}|\\]~|>~|<|>|<=|>=|==|!=|/|%|\\*~|\\$|<<|>>|\\+=|-=|\\*=|/=|%=|>>=|<<=|:|\\?|@)"
				}
			]
		},
		"operator-2": {
			"patterns": [
				{
					"name": "keyword.other.cheese",
					"match": "\\b(not|and|or|xor)\\b"
				}
			]
		},
		"other-1": {
			"patterns": [
				{
					"name": "keyword.other.cheese",
					"match": "(=>|->)"
				}
			]
		},
		"other-2": {
			"patterns": [
				{
					"name": "keyword.other.cheese",
					"match": "\\b(fn|generator|let|def|operator)\\b"
				}
			]
		},
		"storage": {
			"patterns": [
				{
					"name": "storage.modifier.cheese",
					"match": "\\b(import|prototype|export|comptime|mutable|entry|public|private|dynamic)\\b"
				}
			]
		},
		"constant": {
			"patterns": [
				{
					"name": "constant.language.cheese",
					"match": "\\b(none|true|false)\\b"
				}
			]
		},
		"type-1": {

			"patterns": [{
				"name": "storage.type.cheese",
				"match": "\\b((i|u)(\\d+)|f32|f64|c32|c64|comptime_int|comptime_string|comptime_float|comptime_complex|void|opaque|bool|noreturn|type|(i|u)size|struct|enum|interface|concept)\\b"
			}]
		},
		"function-call": {
			"patterns":[{
				"match":"\\b([a-z_](\\w)*)\\(",
				"name":"keyword.operator.call.cheese",
				"captures": {
					"1":{
						"name":"entity.name.function.cheese"
					}
				}
			}]
		},
		"self": {
			"patterns": [{
				"name": "variable.language.cheese",
				"match": "\\bself\\b"
			}]
		},
		"type-2": {
			"patterns": [{
				"name": "entity.name.type.cheese",
				"match": "\\b[A-Z](\\w)*\\b"
			}]
		},
		"identifiers": {
			"patterns": [{
				"name": "variable.name.cheese",
				"match": "\\b[A-Za-z_](\\w)*\\b"
			}]
		},

		"strings": {
			"name": "string.quoted.double.cheese",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.cheese",
					"match": "\\\\."
				}
			]
		},
		"characters": {
			"name": "string.quoted.single.cheese",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.cheese",
					"match": "\\\\."
				}
			]
		},
		"block-comments": {
			"patterns":[
                {
                    "begin": "/\\*",
                    "end" : "\\*/",
                    "name": "comment.block.cheese",
					"patterns": [{
						"include": "#block-comments"
					}]
				}
			]
		},
		"comments" : {
            "patterns": [
                {
                   "begin": "//",
                   "end": "$",
                   "name": "comment.line.double-slash.cheese"
                }
             ]
        }
	},
	"scopeName": "source.cheese"
}